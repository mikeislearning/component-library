// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<LandingStatusForm /> renders correctly 1`] = `
Array [
  <Text
    style={
      Array [
        Object {
          "color": "#726E67",
          "fontFamily": "MessinaSans-Regular",
          "fontSize": 15,
          "lineHeight": 16,
          "marginBottom": 5,
        },
      ]
    }
  >
    Current canadian city
  </Text>,
  <View
    style={
      Array [
        Object {
          "marginBottom": 10,
        },
      ]
    }
  >
    <View
      style={
        Object {
          "position": "relative",
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        clearButtonMode="always"
        onBlur={[Function]}
        placeholder="Current location"
        placeholderTextColor="#726E67"
        rejectResponderTermination={true}
        style={
          Array [
            Object {
              "backgroundColor": "#FFFFFF",
              "borderRadius": 8,
              "color": "#000000",
              "fontFamily": "MessinaSans-Regular",
              "fontSize": 16,
              "height": 50,
              "minWidth": 260,
              "paddingBottom": 0,
              "paddingHorizontal": 10,
              "paddingTop": 0,
              "textAlignVertical": "center",
            },
            Object {},
            Object {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#000000",
              "borderWidth": 1,
            },
          ]
        }
        underlineColorAndroid="transparent"
        value="Toronto"
      />
    </View>
  </View>,
  <Text
    style={
      Array [
        Object {
          "color": "#726E67",
          "fontFamily": "MessinaSans-Regular",
          "fontSize": 15,
          "lineHeight": 16,
          "marginBottom": 5,
        },
      ]
    }
  >
    Date of landing
  </Text>,
  <View
    style={
      Object {
        "marginBottom": 10,
      }
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "borderColor": "#000000",
          "borderRadius": 8,
          "borderWidth": 1,
          "height": 50,
          "justifyContent": "center",
          "minWidth": 280,
          "opacity": 1,
          "paddingHorizontal": 10,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "MessinaSans-Regular",
              "fontSize": 16,
            },
          ]
        }
      >
        Aug 12, 2019
      </Text>
    </View>
    <Modal
      animationType="none"
      hardwareAccelerated={false}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      onRequestClose={[Function]}
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
      transparent={true}
      visible={false}
    >
      <View
        accessible={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "height": 1334,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "width": 750,
          }
        }
      />
      <View
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        pointerEvents="box-none"
        scrollHorizontal={false}
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        style={
          Object {
            "flex": 1,
            "justifyContent": "flex-end",
            "margin": 10,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          }
        }
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "white",
                "borderRadius": 13,
                "marginBottom": 8,
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "transparent",
                "borderBottomColor": "#d5d5d5",
                "borderBottomWidth": 0.5,
                "padding": 14,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#8f8f8f",
                    "fontSize": 13,
                    "textAlign": "center",
                  },
                  undefined,
                ]
              }
            >
              Pick a date
            </Text>
          </View>
          <View
            onStartShouldSetResponderCapture={[Function]}
          >
            <View>
              <RCTDatePicker
                date={1565582400000}
                minuteInterval={1}
                mode="date"
                onChange={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "height": 216,
                  }
                }
              />
            </View>
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderColor": "#d5d5d5",
                "borderTopWidth": 0.5,
                "height": 57,
                "justifyContent": "center",
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#007ff9",
                    "fontSize": 20,
                    "fontWeight": "normal",
                    "textAlign": "center",
                  },
                  undefined,
                ]
              }
            >
              Confirm
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "white",
              "borderRadius": 13,
              "height": 57,
              "justifyContent": "center",
              "marginBottom": 0,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#007ff9",
                  "fontSize": 20,
                  "fontWeight": "600",
                  "padding": 10,
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Cancel
          </Text>
        </View>
      </View>
    </Modal>
  </View>,
  <Text
    style={
      Array [
        Object {
          "color": "#726E67",
          "fontFamily": "MessinaSans-Regular",
          "fontSize": 15,
          "lineHeight": 16,
          "marginBottom": 5,
        },
      ]
    }
  >
    Country of origin
  </Text>,
  <View
    style={
      Array [
        Object {
          "marginBottom": 10,
        },
      ]
    }
  >
    <View
      style={
        Object {
          "position": "relative",
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        clearButtonMode="always"
        onBlur={[Function]}
        placeholder="Country of origin"
        placeholderTextColor="#726E67"
        rejectResponderTermination={true}
        style={
          Array [
            Object {
              "backgroundColor": "#FFFFFF",
              "borderRadius": 8,
              "color": "#000000",
              "fontFamily": "MessinaSans-Regular",
              "fontSize": 16,
              "height": 50,
              "minWidth": 260,
              "paddingBottom": 0,
              "paddingHorizontal": 10,
              "paddingTop": 0,
              "textAlignVertical": "center",
            },
            Object {},
            Object {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#000000",
              "borderWidth": 1,
            },
          ]
        }
        underlineColorAndroid="transparent"
        value="China"
      />
    </View>
  </View>,
  <Text
    style={
      Array [
        Object {
          "color": "#726E67",
          "fontFamily": "MessinaSans-Regular",
          "fontSize": 15,
          "lineHeight": 16,
          "marginBottom": 5,
        },
      ]
    }
  >
    City of origin
  </Text>,
  <View
    style={
      Array [
        Object {
          "marginBottom": 10,
        },
      ]
    }
  >
    <View
      style={
        Object {
          "position": "relative",
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        clearButtonMode="always"
        onBlur={[Function]}
        placeholder="City of origin"
        placeholderTextColor="#726E67"
        rejectResponderTermination={true}
        style={
          Array [
            Object {
              "backgroundColor": "#FFFFFF",
              "borderRadius": 8,
              "color": "#000000",
              "fontFamily": "MessinaSans-Regular",
              "fontSize": 16,
              "height": 50,
              "minWidth": 260,
              "paddingBottom": 0,
              "paddingHorizontal": 10,
              "paddingTop": 0,
              "textAlignVertical": "center",
            },
            Object {},
            Object {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#000000",
              "borderWidth": 1,
            },
          ]
        }
        underlineColorAndroid="transparent"
        value="Shanghai"
      />
    </View>
  </View>,
]
`;
